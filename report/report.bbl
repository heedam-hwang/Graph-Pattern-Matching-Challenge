% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.1 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{nty/global//global/global}
    \entry{한명지2018AEAf}{article}{}
      \name{author}{1}{}{%
        {{hash=1db9b673752c4885aed85adc624b36d5}{%
           family={한명지},
           familyi={한\bibinitperiod}}}%
      }
      \list{language}{1}{%
        {eng}%
      }
      \strng{namehash}{1db9b673752c4885aed85adc624b36d5}
      \strng{fullhash}{1db9b673752c4885aed85adc624b36d5}
      \strng{bibnamehash}{1db9b673752c4885aed85adc624b36d5}
      \strng{authorbibnamehash}{1db9b673752c4885aed85adc624b36d5}
      \strng{authornamehash}{1db9b673752c4885aed85adc624b36d5}
      \strng{authorfullhash}{1db9b673752c4885aed85adc624b36d5}
      \field{sortinit}{한}
      \field{sortinithash}{96fd65df53e200126674f16407a4df2f}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Subgraph isomorphism (or subgraph matching) is one of the fundamental problems in graph analysis. It is an NP-hard problem, and extensive research has been done to develop practical solutions for subgraph isomorphism. Although a great deal of progress has been made, the existing solutions still show a limited scalability in handling large real graphs. The state-of-the-art algorithms are based on the general framework of backtracking which recursively finds all embeddings of a query graph in a data graph. In this thesis we introduce three new techniques: dynamic programming on directed acyclic graphs, the adaptive matching order with DAG-ordering, and pruning by failing sets, which together lead to a much faster and more scalable algorithm DP-iso for subgraph isomorphism. Extensive experiments with real datasets show that DP-iso outperforms the fastest existing solution by up to 4 orders of magnitude with respect to the running time and up to 6 orders of magnitude with respect to the number of recursions.}
      \field{title}{An Efficient Algorithm for Subgraph Isomorphism using Dynamic Programming on Directed Acyclic Graphs}
      \field{year}{2018}
      \keyw{Subgraph Isomorphism; Subgraph Matching; Dynamic Programming; Directed Acyclic Graph; DAG; NP-hard}
    \endentry
  \enddatalist
\endrefsection
\endinput

